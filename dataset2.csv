Timestamp,What are the 4 OOP principles? Write a line about each.[5 marks],Marks 
MODEL Answer,"Encapsulation: encapsulation is combining data and behaviour in one package and hiding the implementation details from the users of the object.
Abstraction: abstraction refers to focusing on relevant portion of the system in consideration while leaving out the unnecessary details.
Polymorphism: polymorphism refers to the ability of one object or reference variable to refer to multiple actual types.
Inheritance: inheritance in OOP applies to 'is-a' type relations that allow child or subclasses to reuse methods and fields of their parent classes.",
11-11-2022 14:57:13,"Inheritance The OOP feature in which subclasses inherit or reuse methods and/or variables from parent classes. 
Abstraction The process of hiding or abstracting away internal details of the system. 
Encapsulation The process of wrapping or hiding private data fields of a class to hide from the clients.
Polymorphism The process in which 1 type can have several forms or subtypes or a function can have several variants.  ",4
11-12-2022 0:14:53,"The four principles of object oriented-programming are Encapsulation, Abstraction, Inheritance, and Polymorphism. Encapsulation is achieved by using private attributes inside a class. Other objects cannot access it directly, instead, they can only invoke public functions. Abstraction is the process of showing only the relevant details to the object (loosely, user). For example, riding a car does not need the internal implementation of the electronics or mechanical parts, the user just uses the ABC and steering. Inheritance is the ability of one object to acquire the properties of another object (child inherits the traits of its parents). Reusability is the major advantage of inheritance. Polymorphism literally means taking multiple forms. In the domain of OOP, polymorphism can be achieved by functions with different parameters (i.e. functiom signature) or by overriding a function. These are the four pillars of OOP.",3
11-12-2022 14:39:55,"Encapsulation: Basically grouping different related data and methods under a single unit. It enables data hiding and abstraction. Data hiding is basically restricted access to the state in order to achieve strict enforcement of business rules.

Abstraction: It is basically providing a high level view and hiding the low level implementation. It enables separation of concern and modularity.

Inheritance: It is a feature that enables taking and combining features of existing classes to make new classes.

Polymorphism: It is a feature of oops that allows users to have different forms of a thing. Like a method with same name having different functionality. according to different parameters. Or like a child class being able to hold a reference of its parent class. We generally have 2 types of polymorphism:
- Static Binding(Compile Time)
- Dynamic Binding(Run Time)",3
11-15-2022 0:08:15,"Abstraction which simply means hiding the unnecessary details from the user and giving access to only the necessary details. Example : for a person starting the car, it is not important for him how the car starts and all he wants is to push that start button and car should start.
Encapsulation helps in maintaining data security and prevents access of data member of a class to the person by using different keywords such as private, public and protected.
Inheritance involves using the parent class code in the child class to avoid repetition of implementation of same functionality again and again and works on the principle of DRY.
Polymorphism implies taking different forms and involves method overriding and method overloading to allow different functionalities for parent and child class.",3
11-15-2022 15:11:15,Abstraction encapsulation Polymorphism Inheritance,0
11-15-2022 15:12:40, Encapsulation. Inheritance. Abstraction. and Polymorphism.,0
11-15-2022 15:31:05,Abstraction refers to the hiding of internal data and functioning while only showing the user the basic details needed for operation. Polymorphism comes from poly - many and morphism - forms. It is essentially the principle that shows how one function can be carried out in multiple different forms (like overloading) Inheritance refers to the existence of a hierarchy where sub classes can inherit behaviours and characteristics of their super class. Encapsulation refers to the wrapping of data and methods into one unit. ,3
11-15-2022 15:35:55,"The 4 OOP principles are
Abstraction Through this process, certain parts of the data can be hidden from the user and only key data points are displayed.
Encapsulation Through this, access to the data can be restricted to certain parts of the program only. 
Inheritance The process by which different classes and interfaces within a program can be connected to each other.
Polymorphism It is the process by which various classes within the program are related by inheritance.
",2
11-15-2022 15:54:34,"Abstraction: The concept of hiding details while keeping functionality. Definition doesn't need to be exact and just a meaning can be used to create functionality.
Polymorphism: Means many forms, means that an object's method can have different meaning in different scenarios.
Inheritance: The child class can inherit all the property of the base class and also have it's specialty. Allows you to create branches without repeating the code.
Encapsulation: The concept of wrapping details with a class or Wrapper, used to implement abstraction.",3
11-16-2022 15:54:34,"Abstraction: Focusing on the important parts of the system under examination while omitting the irrelevant aspects is referred to as abstraction. Polymorphism is the capacity of a single object or reference variable to refer to a variety of actual types. Inheritance: In object-oriented programming (OOP), inheritance refers to 'is-a' type relations that permit child or subclasses to reuse parent class functions and fields.",3
11-17-2022 15:54:34,"Polymorphism: The capacity of one object or reference variable to refer to many actual types is referred to as polymorphism. Inheritance: In object-oriented programming (OOP), inheritance refers to 'is-a' type relations, which permit children or subclasses to utilise the properties and functions of their parent classes.",2
11-18-2022 15:54:34,"The term ""inheritance"" in the context of object-oriented programming (OOP) refers to ""is-a"" type relations, which allow children or subclasses to make use of the features and capabilities of their parent classes.",1
11-19-2022 15:54:34,"Data and behaviour are combined into a single package through encapsulation, which also shields consumers of the object from knowing how it was implemented. One object or reference variable's capacity to refer to a variety of actual types is referred to as polymorphism. Inheritance: In OOP, inheritance refers to ""is-a"" type relationships that permit children or subclasses to utilise the methods and properties of their parent classes.",3
11-20-2022 15:54:34,"The OOP concept of inheritance allows subclasses to reuse or inherit methods and/or variables from parent classes. The act of concealing or abstracting away a system's fundamental elements. Encapsulation is the technique of enclosing or concealing a class's secret data fields so that the customers cannot access them. Polymorphism is the process by which one type may have a number of subtypes or forms, or by which one function can have a number of variations.",3
11-21-2022 15:54:34,"Subclasses can reuse or inherit methods and/or variables from parent classes thanks to the OOP concept of inheritance. Abstraction: The practise of erasing or concealing a system's inherent details. Wrapping or masking a class's private data fields such that they are hidden from clients is the technique of encapsulation. Polymorphism is the process by which one type may take on a number of forms or subtypes, or a function may take on a number of variations.",4
11-22-2022 15:54:34,"The four guiding concepts of object-oriented programming are polymorphism, inheritance, abstraction, and encapsulation. Making use of private attributes inside of a class allows for encapsulation. It is not immediately accessible by other objects; they can only call its public functions. The technique of revealing just the elements that are pertinent to the item is called abstraction (loosely, user). Driving a vehicle, for instance, just requires the operator to utilise the ABC and steering; internal electronics or mechanical components are not required. The capacity of one item to take on the characteristics of another object is known as inheritance (child inherits the traits of its parents). The main benefit of inheritance is reuse. Literally, polymorphism implies taking on several shapes. In the world of OOP, polymorphism may be accomplished by either overriding a function or creating functions with various arguments. These four principles make up OOP.",3
11-23-2022 15:54:34,"Encapsulation: The process of essentially combining several linked data and methodologies into a single entity. Data hiding and abstraction are made possible. Restricted access to the state is essentially what data concealing is, and it's used to enforce business rules strictly.",1
11-24-2022 15:54:34,Polymorphism is an oops feature that enables users to have various versions of a thing. similar to a method with the same name but different behaviour depending on various inputs. Or similar to how a child class can save a reference to a parent class. There are typically two forms of polymorphism: Dynamic Binding (Compile Time) and Dynamic Binding (Run Time),1
11-25-2022 15:54:34,"To avoid repeatedly implementing the same functionality, inheritance uses parent class code in the child class and adheres to the DRY principle. To allow varied functions for parent and child classes, polymorphism entails accepting different forms and involves method overloading and overriding.",2
11-26-2022 15:54:34,"Abstraction, which simply refers to withholding from the user the information that is not required while allowing access to the information that is. A person starting a car, for instance, doesn't care how the car begins; all he wants to do is press the start button, and the car should start. Using distinct keywords like private, public, and protected, encapsulation aids in maintaining data security and prohibits access of data members of a class to the individual.",2
11-27-2022 15:54:34,Abstraction is the masking of internal information and operations while only displaying to the user the minimal information required for operation. The word polymorphism comes from poly and morphism. Inheritance refers to the existence of a hierarchy where sub classes can inherit the behaviours and traits of their super class. It is essentially the notion that demonstrates how one function can be carried out in several distinct ways (like overloading). Encapsulation is the process of combining data and procedures into a single entity.,3
11-28-2022 15:54:34,"The four OOP concepts are:  Abstraction: By using this method, the user may only see the most important data points while some portions of the data are concealed from them.  Encapsulation: This allows access to the data to be limited to specific software components. The method through which several classes and interfaces inside a programme can be linked to one another is called inheritance. The mechanism through which different classes within a software are connected by inheritance is known as polymorphism.",2
11-29-2022 15:54:34,"Abstraction: The idea of concealing specifics while maintaining operation. Functionality can be created using merely a meaning rather than a specific definition. A method on an object may have different implications depending on the context thanks to polymorphism, which means many forms. Inheritance: The kid class can both inherit all of the base class's properties and its own unique specialties. makes it possible to generate branches without having to duplicate the code. Encapsulation: The idea of enclosing specifics in a class or Wrapper in order to implement abstraction.",4
11-30-2022 15:54:34,Encapsulation: Encapsulation is when data and behaviour are combined into one package while keeping the implementation details hidden from the object's users. Focusing on the pertinent parts of the system under examination while omitting the extraneous aspects is known as abstraction. Polymorphism: The capacity of one object or reference variable to refer to many actual types is referred to as polymorphism.,3
12-1-2022 15:54:34,Abstraction: Focusing on the important parts of the system under examination while excluding the irrelevant aspects is referred to as abstraction. Polymorphism is the capacity of a single object or reference variable to refer to a variety of real kinds.,2
